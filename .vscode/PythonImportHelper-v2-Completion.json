[
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "BeautifulSoup",
        "importPath": "bs4",
        "description": "bs4",
        "isExtraImport": true,
        "detail": "bs4",
        "documentation": {}
    },
    {
        "label": "execjs",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "execjs",
        "description": "execjs",
        "detail": "execjs",
        "documentation": {}
    },
    {
        "label": "requests",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests",
        "description": "requests",
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "uuid",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "uuid",
        "description": "uuid",
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "get_encrypted_pwd",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def get_encrypted_pwd(password, salt):\n    with open('encrypt.js', 'r') as file:\n        js_code = file.read()\n    ctx = execjs.compile(js_code)\n    result = ctx.call('encryptPassword', password, salt)\n    return result\ndef get_random_uuid():\n    return str(uuid.uuid4()).replace('-', '')\ndef login(username, password):\n    request_uuid = get_random_uuid()",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "get_random_uuid",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def get_random_uuid():\n    return str(uuid.uuid4()).replace('-', '')\ndef login(username, password):\n    request_uuid = get_random_uuid()\n    redirect_resp = session.get(f\"https://seat-lx.ucass.edu.cn/authcenter/toLoginPage?redirectUrl=https://seat-lx.ucass.edu.cn/ic-web//auth/token?uuid={request_uuid}&extInfo=\", headers=GENERAL_HEADERS, allow_redirects=False)\n    login_url = \"https://authserver.ucass.edu.cn/authserver/login?service=http%3A%2F%2Fseat-lx.ucass.edu.cn%2Fauthcenter%2FdoAuth%2F6113ee0c8b244a1792bad68392a1672c\"\n    login_resp = session.get(login_url, allow_redirects=False)\n    soup = BeautifulSoup(login_resp.text, 'html.parser')\n    salt_element = soup.find(id='pwdEncryptSalt')\n    execution_element = soup.find(id='execution')",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "login",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def login(username, password):\n    request_uuid = get_random_uuid()\n    redirect_resp = session.get(f\"https://seat-lx.ucass.edu.cn/authcenter/toLoginPage?redirectUrl=https://seat-lx.ucass.edu.cn/ic-web//auth/token?uuid={request_uuid}&extInfo=\", headers=GENERAL_HEADERS, allow_redirects=False)\n    login_url = \"https://authserver.ucass.edu.cn/authserver/login?service=http%3A%2F%2Fseat-lx.ucass.edu.cn%2Fauthcenter%2FdoAuth%2F6113ee0c8b244a1792bad68392a1672c\"\n    login_resp = session.get(login_url, allow_redirects=False)\n    soup = BeautifulSoup(login_resp.text, 'html.parser')\n    salt_element = soup.find(id='pwdEncryptSalt')\n    execution_element = soup.find(id='execution')\n    salt = salt_element['value'] if salt_element else \"\"\n    execution = execution_element['value'] if execution_element else \"\"",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "ticket_auth",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def ticket_auth(url: str, use_https: bool = False) -> requests.Response:\n    if use_https:\n        url = url.replace(\"http://\", \"https://\")\n    auth_resp = session.get(url, allow_redirects=False)\n    return auth_resp\ndef get_ic_cookies():\n    request_uuid = get_random_uuid()\n    login_redirect_resp = session.get(f\"https://seat-lx.ucass.edu.cn/authcenter/toLoginPage?redirectUrl=https://seat-lx.ucass.edu.cn/ic-web//auth/token?uuid={request_uuid}&extInfo=\", allow_redirects=False)\n    login_url = login_redirect_resp.headers[\"Location\"]\n    login_resp = session.get(login_url, allow_redirects=False)",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "get_ic_cookies",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def get_ic_cookies():\n    request_uuid = get_random_uuid()\n    login_redirect_resp = session.get(f\"https://seat-lx.ucass.edu.cn/authcenter/toLoginPage?redirectUrl=https://seat-lx.ucass.edu.cn/ic-web//auth/token?uuid={request_uuid}&extInfo=\", allow_redirects=False)\n    login_url = login_redirect_resp.headers[\"Location\"]\n    login_resp = session.get(login_url, allow_redirects=False)\n    ticket_url = login_resp.headers[\"Location\"]\n    ticket_resp = ticket_auth(ticket_url)\n    unitoken_url = ticket_resp.headers[\"Location\"]\n    unitoken_resp = session.get(unitoken_url)\n    final_ticket_resp = ticket_auth(ticket_url, True)",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "USER_AGENT",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "USER_AGENT = \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36\"\nGENERAL_HEADERS = {\n    'User-Agent': USER_AGENT,\n}\nsession = requests.Session()\ndef get_encrypted_pwd(password, salt):\n    with open('encrypt.js', 'r') as file:\n        js_code = file.read()\n    ctx = execjs.compile(js_code)\n    result = ctx.call('encryptPassword', password, salt)",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "GENERAL_HEADERS",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "GENERAL_HEADERS = {\n    'User-Agent': USER_AGENT,\n}\nsession = requests.Session()\ndef get_encrypted_pwd(password, salt):\n    with open('encrypt.js', 'r') as file:\n        js_code = file.read()\n    ctx = execjs.compile(js_code)\n    result = ctx.call('encryptPassword', password, salt)\n    return result",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "session",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "session = requests.Session()\ndef get_encrypted_pwd(password, salt):\n    with open('encrypt.js', 'r') as file:\n        js_code = file.read()\n    ctx = execjs.compile(js_code)\n    result = ctx.call('encryptPassword', password, salt)\n    return result\ndef get_random_uuid():\n    return str(uuid.uuid4()).replace('-', '')\ndef login(username, password):",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "login_response",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "login_response = login('20241141128', 'frNwzTNNeGnAkkq6ADpAqv*ZGvPHYU')\nlogin_cookies = login_response.cookies\ncookies = get_ic_cookies()",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "login_cookies",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "login_cookies = login_response.cookies\ncookies = get_ic_cookies()",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "cookies",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "cookies = get_ic_cookies()",
        "detail": "main",
        "documentation": {}
    }
]